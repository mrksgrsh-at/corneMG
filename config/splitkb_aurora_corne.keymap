/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tapp_hold: tapp_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPP_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <14 7 8 9 10 19 20 21 22 31 32 33 34 41 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };

        shift_hold: shift_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_HOLD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <14 7 8 9 10 19 20 21 22 31 32 33 34 41 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace_left {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 15>;
            layers = <0 1 2>;
        };

        backspace_right {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
            layers = <0 1 2>;
        };

        backspace_strg_left {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <16 15 14>;
            layers = <0 1 2>;
        };

        backspace_strg_right {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <19 20 21>;
            layers = <0 1 2>;
        };
    };

    macros {
        mail_work: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_M &kp DE_A &kp DE_R &kp DE_K &kp DE_U &kp DE_S &kp DE_AT_SIGN &kp DE_M &kp DE_A &kp DE_R &kp DE_K &kp DE_U &kp DE_S &kp DE_G &kp DE_R &kp DE_U &kp DE_S &kp DE_C &kp DE_H &kp DE_PERIOD &kp DE_A &kp DE_T>;
            label = "NEW_MACRO";
        };

        mail_pers: mail_personal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DE_M &kp DE_PERIOD &kp DE_G &kp DE_R &kp DE_U &kp DE_S &kp DE_C &kp DE_H &kp DE_AT_SIGN &kp DE_G &kp DE_M &kp DE_A &kp DE_I &kp DE_L &kp DE_DOT &kp DE_C &kp DE_O &kp DE_M>;
            label = "MAIL_PERSONAL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letters {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC           &kp DE_Q  &kp DE_W                    &kp DE_E  &kp DE_R  &kp DE_T                        &kp DE_Z                       &kp DE_U  &kp DE_I      &kp DE_O       &kp DE_P         &kp DE_U_UMLAUT
&kp TAB           &kp DE_A  &tapp_hold DE_SHARP_S DE_S  &kp DE_D  &kp DE_F  &kp DE_G                        &kp DE_H                       &kp DE_J  &kp DE_K      &kp DE_L       &kp DE_O_UMLAUT  &kp DE_A_UMLAUT
&kp LEFT_CONTROL  &kp DE_Y  &kp DE_X                    &kp DE_C  &kp DE_V  &kp DE_B                        &kp DE_N                       &kp DE_M  &kp DE_COMMA  &kp DE_PERIOD  &kp DE_MINUS     &kp DELETE
                                                        &kp LGUI  &mo 1     &shift_hold LEFT_SHIFT ENTER    &shift_hold RIGHT_SHIFT SPACE  &mo 2     &kp LEFT_ALT
            >;
        };

        move_numbers_audio {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp C_VOLUME_UP    &kp HOME        &kp UP_ARROW      &kp END     &kp PAGE_UP      &kp COMMA      &tapp_hold F7 DE_N7  &tapp_hold F8 DE_N8  &tapp_hold F9 DE_N9  &tapp_hold F10 DE_SLASH  &none
&trans  &kp C_VOLUME_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT   &kp PAGE_DOWN    &kp DE_PERIOD  &tapp_hold F4 DE_N4  &tapp_hold F5 DE_N5  &tapp_hold F6 DE_N6  &tapp_hold F11 DE_ASTRK  &none
&trans  &kp C_MUTE         &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp F5           &kp DE_EQUAL   &tapp_hold F1 DE_N1  &tapp_hold F2 DE_N2  &tapp_hold F3 DE_N3  &tapp_hold F12 DE_PLUS   &tapp_hold PRINTSCREEN MINUS
                                           &kp LGUI          &none       &trans           &trans         &kp DE_N0            &trans
            >;
        };

        symbols_bt {
            bindings = <
&trans  &kp DE_LESS_THAN     &kp DE_LEFT_BRACE   &kp DE_LEFT_BRACKET   &kp DE_LPAR               &kp DE_SLASH        &kp DE_AMPS    &kp DE_DOUBLE_QUOTES  &kp DE_SQT    &kp DE_GRAVE  &kp DE_ACUTE  &none
&trans  &kp DE_EXCL          &kp DE_AT_SIGN      &kp DE_HASH           &kp DE_QUESTION           &kp DE_PERCENT      &kp DE_EURO    &none                 &none         &kp DE_TILDE  &mail_work    &mail_pers
&trans  &kp DE_GREATER_THAN  &kp DE_RIGHT_BRACE  &kp DE_RIGHT_BRACKET  &kp DE_RIGHT_PARENTHESIS  &kp DE_BACKSLASH    &kp DE_DOLLAR  &bt BT_SEL 0          &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
                                                 &kp LG(DOT)           &none                     &trans              &trans         &none                 &trans
            >;
        };
    };
};
